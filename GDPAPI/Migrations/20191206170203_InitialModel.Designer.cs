// <auto-generated />
using System;
using GDPAPI.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GDPAPI.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20191206170203_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GDPAPI.Models.Client", b =>
                {
                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identification");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GDPAPI.Models.Company", b =>
                {
                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nit");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GDPAPI.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("GDPAPI.Models.DestinationOffered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyNit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<double>("DestinationPrice")
                        .HasColumnType("float");

                    b.Property<bool>("Direct")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyNit");

                    b.HasIndex("DestinationId");

                    b.ToTable("DestinationsOffered");
                });

            modelBuilder.Entity("GDPAPI.Models.Driver", b =>
                {
                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identification");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("GDPAPI.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("VehiclePlaque")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VehiclePlaque");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("GDPAPI.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FK_Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FK_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FK_VehicleDeparture")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("GDPAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GDPAPI.Models.Vehicle", b =>
                {
                    b.Property<string>("Plaque")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyNit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InternalIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Plaque");

                    b.HasIndex("CompanyNit");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("GDPAPI.Models.VehicleDeparture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_DestinationOffered")
                        .HasColumnType("int");

                    b.Property<string>("FK_Driver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FK_Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleDepartures");
                });

            modelBuilder.Entity("GDPAPI.Models.DestinationOffered", b =>
                {
                    b.HasOne("GDPAPI.Models.Company", "Company")
                        .WithMany("DestinationOffers")
                        .HasForeignKey("CompanyNit");

                    b.HasOne("GDPAPI.Models.Station", "Station")
                        .WithMany("DestinationOffers")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GDPAPI.Models.Seat", b =>
                {
                    b.HasOne("GDPAPI.Models.Vehicle", "Vehicle")
                        .WithMany("Seats")
                        .HasForeignKey("VehiclePlaque");
                });

            modelBuilder.Entity("GDPAPI.Models.Vehicle", b =>
                {
                    b.HasOne("GDPAPI.Models.Company", "Company")
                        .WithMany("Vehicle")
                        .HasForeignKey("CompanyNit");
                });
#pragma warning restore 612, 618
        }
    }
}
